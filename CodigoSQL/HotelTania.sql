-- MySQL Script generated by MySQL Workbench
-- mar 10 ene 2023 09:41:53
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Habitacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Habitacion` (
  `idHabitacion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Categoria` INT UNSIGNED NOT NULL,
  `PrecioPorNoche` DOUBLE UNSIGNED NOT NULL,
  `SizeM2` DOUBLE UNSIGNED NOT NULL,
  `NumeroCamas` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idHabitacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Servicios` (
  `idServicios` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `TourGuiado` TINYINT NOT NULL,
  `Transporte` TINYINT NOT NULL,
  `Lavanderia` TINYINT NOT NULL,
  `Gimnasio` TINYINT NOT NULL,
  PRIMARY KEY (`idServicios`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reservacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Reservacion` (
  `idReservacion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NumeroPersonas` INT UNSIGNED NOT NULL,
  `NumeroNoches` INT UNSIGNED NOT NULL,
  `fk_habitacionId` INT UNSIGNED NOT NULL,
  `fk_serviciosId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idReservacion`),
  INDEX `fk_habitacionId_idx` (`fk_habitacionId` ASC),
  INDEX `fk_serviciosId_idx` (`fk_serviciosId` ASC),
  CONSTRAINT `fk_habitacionId`
    FOREIGN KEY (`fk_habitacionId`)
    REFERENCES `mydb`.`Habitacion` (`idHabitacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_serviciosId`
    FOREIGN KEY (`fk_serviciosId`)
    REFERENCES `mydb`.`Servicios` (`idServicios`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Estacionamiento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Estacionamiento` (
  `idEstacionamiento` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NumeroCajones` INT UNSIGNED NOT NULL,
  `SizeM2` DOUBLE UNSIGNED NOT NULL,
  `Automatizado` TINYINT NOT NULL,
  `NumeroPisos` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idEstacionamiento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Hotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Hotel` (
  `idHotel` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NumeroTrabajadores` INT UNSIGNED NOT NULL,
  `Direccion` VARCHAR(45) NOT NULL,
  `NumeroEstrellas` INT UNSIGNED NOT NULL,
  `fk_habitacionIds` INT UNSIGNED NOT NULL,
  `fk_estacionamientoIds` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idHotel`),
  INDEX `fk_habitacionIds_idx` (`fk_habitacionIds` ASC),
  INDEX `fk_estacionamientoIds_idx` (`fk_estacionamientoIds` ASC),
  CONSTRAINT `fk_habitacionIds`
    FOREIGN KEY (`fk_habitacionIds`)
    REFERENCES `mydb`.`Habitacion` (`idHabitacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_estacionamientoIds`
    FOREIGN KEY (`fk_estacionamientoIds`)
    REFERENCES `mydb`.`Estacionamiento` (`idEstacionamiento`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
